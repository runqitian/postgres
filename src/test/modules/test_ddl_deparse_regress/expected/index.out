CREATE TABLE test_index_base(
    id1 int,
    id2 int,
    id3 int,
    id4 int,
    id5 int,
    id6 int,
    id7 int,
    id8 int,
    position point,
    name varchar,
    description text
);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_index_base", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_index_base (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )      
-- CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ [ IF NOT EXISTS ] name ] ON [ ONLY ] table_name [ USING method ]
CREATE TABLE test_create_index_prefix(
    LIKE test_index_base
);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_create_index_prefix", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_create_index_prefix (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )      
CREATE TABLE test_create_index_prefix_partitioned(
    LIKE test_index_base
) PARTITION BY RANGE (id8);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_create_index_prefix_partitioned", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "definition": "RANGE (id8)"}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_create_index_prefix_partitioned (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )  PARTITION BY RANGE (id8)    
CREATE TABLE test_create_index_prefix_partitioned_part1 PARTITION OF test_create_index_prefix_partitioned DEFAULT;
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D PARTITION OF %{parent_identity}D %{table_elements}s %{partition_bound}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_create_index_prefix_partitioned_part1", "schemaname": "public"}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": {"fmt": "", "present": false}, "parent_identity": {"objname": "test_create_index_prefix_partitioned", "schemaname": "public"}, "partition_bound": "DEFAULT"}
NOTICE:  re-formed command: CREATE  TABLE  public.test_create_index_prefix_partitioned_part1 PARTITION OF public.test_create_index_prefix_partitioned  DEFAULT     
CREATE INDEX ON test_create_index_prefix (id1);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_id1_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_prefix_id1_idx ON  public.test_create_index_prefix USING btree (id1 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE UNIQUE INDEX ON test_create_index_prefix (id2);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_id2_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "UNIQUE", "index_am": "btree", "definition": "(id2 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE UNIQUE INDEX   test_create_index_prefix_id2_idx ON  public.test_create_index_prefix USING btree (id2 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX CONCURRENTLY ON test_create_index_prefix(id3);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_id3_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id3 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "CONCURRENTLY", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX CONCURRENTLY  test_create_index_prefix_id3_idx ON  public.test_create_index_prefix USING btree (id3 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX customized_index_on_id4 ON test_create_index_prefix (id4);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "customized_index_on_id4", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id4 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   customized_index_on_id4 ON  public.test_create_index_prefix USING btree (id4 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX IF NOT EXISTS customized_index_on_id4 ON test_create_index_prefix (id4);
NOTICE:  relation "customized_index_on_id4" already exists, skipping
CREATE INDEX ON ONLY test_create_index_prefix_partitioned (id1);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_partitioned_id1_idx", "only": "ONLY", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix_partitioned", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_prefix_partitioned_id1_idx ON ONLY public.test_create_index_prefix_partitioned USING btree (id1 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_prefix_partitioned (id2);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_partitioned_id2_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix_partitioned", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id2 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_prefix_partitioned_id2_idx ON  public.test_create_index_prefix_partitioned USING btree (id2 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_prefix USING gist (position);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_prefix_position_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "", "index_am": "gist", "definition": "(\"position\" pg_catalog.point_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_prefix_position_idx ON  public.test_create_index_prefix USING gist ("position" pg_catalog.point_ops)    NULLS DISTINCT
CREATE INDEX CONCURRENTLY IF NOT EXISTS customized_index_on_id5 ON test_create_index_prefix USING hash (id5);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "customized_index_on_id5", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "", "index_am": "hash", "definition": "(id5 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "CONCURRENTLY", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": "IF NOT EXISTS"}
NOTICE:  re-formed command: CREATE  INDEX CONCURRENTLY IF NOT EXISTS customized_index_on_id5 ON  public.test_create_index_prefix USING hash (id5 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS customized_index_on_id6 ON test_create_index_prefix USING btree (id6);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "customized_index_on_id6", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix", "schemaname": "public"}, "unique": "UNIQUE", "index_am": "btree", "definition": "(id6 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "CONCURRENTLY", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": "IF NOT EXISTS"}
NOTICE:  re-formed command: CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS customized_index_on_id6 ON  public.test_create_index_prefix USING btree (id6 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE UNIQUE INDEX IF NOT EXISTS customized_index_on_id8 ON ONLY test_create_index_prefix_partitioned USING btree (id8);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "customized_index_on_id8", "only": "ONLY", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_prefix_partitioned", "schemaname": "public"}, "unique": "UNIQUE", "index_am": "btree", "definition": "(id8 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": "IF NOT EXISTS"}
NOTICE:  re-formed command: CREATE UNIQUE INDEX  IF NOT EXISTS customized_index_on_id8 ON ONLY public.test_create_index_prefix_partitioned USING btree (id8 pg_catalog.int4_ops)    NULLS DISTINCT
-- ( { column_name | ( expression ) } [ COLLATE collation ] [ opclass [ ( opclass_parameter = value [, ... ] ) ] ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )
CREATE TABLE test_create_index_definition(
    LIKE test_index_base
);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_create_index_definition", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_create_index_definition (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )      
CREATE INDEX ON test_create_index_definition (
    id1, id2
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id1_id2_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops, id2 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id1_id2_idx ON  public.test_create_index_definition USING btree (id1 pg_catalog.int4_ops, id2 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition(
    (id1 + id2)
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_expr_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(((id1 OPERATOR(pg_catalog.+) id2)) pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_expr_idx ON  public.test_create_index_definition USING btree (((id1 OPERATOR(pg_catalog.+) id2)) pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    name COLLATE "fr_FR"
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_name_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(name COLLATE pg_catalog.\"fr_FR\" pg_catalog.text_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_name_idx ON  public.test_create_index_definition USING btree (name COLLATE pg_catalog."fr_FR" pg_catalog.text_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition USING brin (
    id3 int4_minmax_multi_ops
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id3_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "brin", "definition": "(id3 pg_catalog.int4_minmax_multi_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id3_idx ON  public.test_create_index_definition USING brin (id3 pg_catalog.int4_minmax_multi_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    id4 ASC
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id4_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id4 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id4_idx ON  public.test_create_index_definition USING btree (id4 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    id5 DESC
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id5_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id5 pg_catalog.int4_ops DESC)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id5_idx ON  public.test_create_index_definition USING btree (id5 pg_catalog.int4_ops DESC)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    id6 DESC NULLS LAST
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id6_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id6 pg_catalog.int4_ops DESC NULLS LAST)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id6_idx ON  public.test_create_index_definition USING btree (id6 pg_catalog.int4_ops DESC NULLS LAST)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    id7 NULLS FIRST
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_id7_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id7 pg_catalog.int4_ops NULLS FIRST)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_id7_idx ON  public.test_create_index_definition USING btree (id7 pg_catalog.int4_ops NULLS FIRST)    NULLS DISTINCT
CREATE INDEX ON test_create_index_definition (
    description COLLATE "fr_FR" DESC NULLS LAST,
    (id3 * id4) int4_ops ASC NULLS FIRST
);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_definition_description_expr_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_definition", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(description COLLATE pg_catalog.\"fr_FR\" pg_catalog.text_ops DESC NULLS LAST, ((id3 OPERATOR(pg_catalog.*) id4)) pg_catalog.int4_ops NULLS FIRST)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_definition_description_expr_idx ON  public.test_create_index_definition USING btree (description COLLATE pg_catalog."fr_FR" pg_catalog.text_ops DESC NULLS LAST, ((id3 OPERATOR(pg_catalog.*) id4)) pg_catalog.int4_ops NULLS FIRST)    NULLS DISTINCT
-- [ INCLUDE ( column_name [, ...] ) ]
CREATE TABLE test_create_index_suffix(
    LIKE test_index_base
);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_create_index_suffix", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_create_index_suffix (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )      
CREATE INDEX ON test_create_index_suffix (id1)
    INCLUDE (name, position);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_suffix_id1_name_position_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_suffix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops) INCLUDE (name, \"position\")", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_suffix_id1_name_position_idx ON  public.test_create_index_suffix USING btree (id1 pg_catalog.int4_ops) INCLUDE (name, "position")    NULLS DISTINCT
CREATE INDEX ON test_create_index_suffix (id2)
    INCLUDE (name);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_suffix_id2_name_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_suffix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id2 pg_catalog.int4_ops) INCLUDE (name)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_suffix_id2_name_idx ON  public.test_create_index_suffix USING btree (id2 pg_catalog.int4_ops) INCLUDE (name)    NULLS DISTINCT
-- [ NULLS [ NOT ] DISTINCT ]
CREATE INDEX ON test_create_index_suffix (id3)
    NULLS DISTINCT;
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_create_index_suffix_id3_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_suffix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id3 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_suffix_id3_idx ON  public.test_create_index_suffix USING btree (id3 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX ON test_create_index_suffix (id4)
    NULLS NOT DISTINCT;
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS NOT DISTINCT", "name": "test_create_index_suffix_id4_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_create_index_suffix", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id4 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_create_index_suffix_id4_idx ON  public.test_create_index_suffix USING btree (id4 pg_catalog.int4_ops)    NULLS NOT DISTINCT
-- TOFIX:  NULLS DISTINCT option should not be placed at the end of reformed statement
-- [ WITH ( storage_parameter [= value] [, ... ] ) ]
-- CREATE INDEX ON test_create_index_suffix (id5)
--     WITH (fillfactor = 20);
-- CREATE INDEX ON test_create_index_suffix USING brin (id6)
--     WITH (pages_per_range = 10, autosummarize = ON);
-- [ TABLESPACE tablespace_name ]
-- CREATE INDEX ON test_create_index_definition ((id1 + id2))
--     TABLESPACE ddl_testing_tablespace;
-- [ WHERE predicate ]
-- CREATE INDEX ON test_create_index_definition ((id2 + id3))
--     WHERE (id2 > 200 AND id3 < 500);
-- CREATE INDEX ON test_create_index_definition ((id3 + id4))
--     INCLUDE (id7, name)
--     NULLS NOT DISTINCT
--     WITH (fillfactor = 20, deduplicate_items=OFF)
--     TABLESPACE ddl_testing_tablespace
--     WHERE (id4 > 100);
-- complex statements
-- TODO after above fix
-- ALTER INDEX
CREATE TABLE test_alter_index(
    LIKE test_index_base
);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_alter_index", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_alter_index (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )      
CREATE INDEX test_alter_index_idx1 ON test_alter_index (id1);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx1", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx1 ON  public.test_alter_index USING btree (id1 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx2 ON test_alter_index (id2);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx2", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id2 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx2 ON  public.test_alter_index USING btree (id2 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx3 ON test_alter_index (id3);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx3", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id3 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx3 ON  public.test_alter_index USING btree (id3 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx4 ON test_alter_index (id4);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx4", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id4 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx4 ON  public.test_alter_index USING btree (id4 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx5 ON test_alter_index (id5);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx5", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id5 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx5 ON  public.test_alter_index USING btree (id5 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx6 ON test_alter_index (id6);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx6", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id6 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx6 ON  public.test_alter_index USING btree (id6 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx7 ON test_alter_index (id7);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx7", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id7 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx7 ON  public.test_alter_index USING btree (id7 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX test_alter_index_idx8 ON test_alter_index (id8);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx8", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id8 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx8 ON  public.test_alter_index USING btree (id8 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE TABLE test_alter_index_partitioned(
    LIKE test_index_base
) PARTITION BY RANGE (id8);
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D (%{table_elements:, }s) %{inherits}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_alter_index_partitioned", "schemaname": "public"}, "inherits": {"fmt": "INHERITS (%{parents:, }D)", "parents": null, "present": false}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "definition": "RANGE (id8)"}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": [{"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id1", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id2", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id3", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id4", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id5", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id6", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id7", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "id8", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "int4", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "position", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "point", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE", "present": false}, "colstorage": "plain", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "name", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "varchar", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}, {"fmt": "%{name}I %{coltype}T STORAGE %{colstorage}s %{compression}s %{collation}s %{not_null}s %{default}s %{generated_column}s", "name": "description", "type": "column", "coltype": {"typmod": "", "typarray": false, "typename": "text", "schemaname": "pg_catalog"}, "default": {"fmt": "DEFAULT", "present": false}, "not_null": "", "collation": {"fmt": "COLLATE %{name}D", "name": {"objname": "default", "schemaname": "pg_catalog"}}, "colstorage": "extended", "compression": {"fmt": "COMPRESSION %{compression_method}I", "present": false, "compression_method": null}, "generated_column": {"fmt": "GENERATED ALWAYS AS", "present": false}}]}
NOTICE:  re-formed command: CREATE  TABLE  public.test_alter_index_partitioned (id1 pg_catalog.int4 STORAGE plain     , id2 pg_catalog.int4 STORAGE plain     , id3 pg_catalog.int4 STORAGE plain     , id4 pg_catalog.int4 STORAGE plain     , id5 pg_catalog.int4 STORAGE plain     , id6 pg_catalog.int4 STORAGE plain     , id7 pg_catalog.int4 STORAGE plain     , id8 pg_catalog.int4 STORAGE plain     , "position" pg_catalog.point STORAGE plain     , name pg_catalog."varchar" STORAGE extended  COLLATE pg_catalog."default"   , description pg_catalog.text STORAGE extended  COLLATE pg_catalog."default"   )  PARTITION BY RANGE (id8)    
CREATE TABLE test_alter_index_partitioned_part1
    PARTITION OF test_alter_index_partitioned DEFAULT;
NOTICE:  deparsed json: {"fmt": "CREATE %{persistence}s TABLE %{if_not_exists}s %{identity}D PARTITION OF %{parent_identity}D %{table_elements}s %{partition_bound}s %{partition_by}s %{access_method}s %{with_clause}s %{on_commit}s %{tablespace}s", "identity": {"objname": "test_alter_index_partitioned_part1", "schemaname": "public"}, "on_commit": {"fmt": "ON COMMIT %{on_commit_value}s", "present": false, "on_commit_value": null}, "tablespace": {"fmt": "TABLESPACE %{tablespace}I", "present": false, "tablespace": null}, "persistence": "", "with_clause": {"fmt": "WITH", "present": false}, "partition_by": {"fmt": "PARTITION BY %{definition}s", "present": false, "definition": null}, "access_method": {"fmt": "USING %{access_method}I", "present": false, "access_method": null}, "if_not_exists": "", "table_elements": {"fmt": "", "present": false}, "parent_identity": {"objname": "test_alter_index_partitioned", "schemaname": "public"}, "partition_bound": "DEFAULT"}
NOTICE:  re-formed command: CREATE  TABLE  public.test_alter_index_partitioned_part1 PARTITION OF public.test_alter_index_partitioned  DEFAULT     
CREATE INDEX test_alter_index_partitioned_idx ON ONLY test_alter_index_partitioned (id1);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_partitioned_idx", "only": "ONLY", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index_partitioned", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_partitioned_idx ON ONLY public.test_alter_index_partitioned USING btree (id1 pg_catalog.int4_ops)    NULLS DISTINCT
CREATE INDEX CONCURRENTLY test_alter_index_partitioned_part1_idx ON test_alter_index_partitioned_part1 (id1);
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_partitioned_part1_idx", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index_partitioned_part1", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(id1 pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "CONCURRENTLY", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX CONCURRENTLY  test_alter_index_partitioned_part1_idx ON  public.test_alter_index_partitioned_part1 USING btree (id1 pg_catalog.int4_ops)    NULLS DISTINCT
-- ALTER INDEX [ IF EXISTS ] name RENAME TO new_name
ALTER INDEX test_alter_index_idx1 RENAME TO test_alter_index_idx1_new_idx;
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{if_exists}s %{identity}D RENAME TO %{newname}I", "newname": "test_alter_index_idx1_new_idx", "objtype": "INDEX", "identity": {"objname": "test_alter_index_idx1", "schemaname": "public"}, "if_exists": ""}
NOTICE:  re-formed command: ALTER INDEX  public.test_alter_index_idx1 RENAME TO test_alter_index_idx1_new_idx
ALTER INDEX IF EXISTS test_alter_index_fake_index RENAME TO test_alter_index_fake_new_idx;
NOTICE:  relation "test_alter_index_fake_index" does not exist, skipping
-- ALTER INDEX [ IF EXISTS ] name SET TABLESPACE tablespace_name
ALTER INDEX test_alter_index_idx2 SET TABLESPACE ddl_testing_tablespace;
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "SET TABLESPACE %{tablespace}I", "type": "set tablespace", "tablespace": "ddl_testing_tablespace"}], "identity": {"objname": "test_alter_index_idx2", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx2 SET TABLESPACE ddl_testing_tablespace
ALTER INDEX IF EXISTS test_alter_index_fake_index SET TABLESPACE ddl_testing_tablespace;
NOTICE:  relation "test_alter_index_fake_index" does not exist, skipping
-- ALTER INDEX name ATTACH PARTITION index_name
-- TOFIX
-- ALTER INDEX test_alter_index_partitioned_idx ATTACH PARTITION test_alter_index_partitioned_part1_idx;
-- ALTER INDEX name [ NO ] DEPENDS ON EXTENSION extension_name
CREATE EXTENSION pg_stat_statements;
NOTICE:  deparsed json: {"fmt": "CREATE EXTENSION %{if_not_exists}s %{name}I %{options: }s", "name": "pg_stat_statements", "options": [{"fmt": "SCHEMA %{schema}I", "type": "schema", "schema": "public"}], "if_not_exists": ""}
NOTICE:  re-formed command: CREATE EXTENSION  pg_stat_statements SCHEMA public
ALTER INDEX test_alter_index_idx3 DEPENDS ON EXTENSION pg_stat_statements;
NOTICE:  deparsed json: {"no": "", "fmt": "ALTER INDEX %{identity}D %{no}s DEPENDS ON EXTENSION %{newname}I", "newname": "pg_stat_statements", "identity": {"objname": "test_alter_index_idx3", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx3  DEPENDS ON EXTENSION pg_stat_statements
DROP EXTENSION pg_stat_statements;
CREATE EXTENSION pg_stat_statements;
NOTICE:  deparsed json: {"fmt": "CREATE EXTENSION %{if_not_exists}s %{name}I %{options: }s", "name": "pg_stat_statements", "options": [{"fmt": "SCHEMA %{schema}I", "type": "schema", "schema": "public"}], "if_not_exists": ""}
NOTICE:  re-formed command: CREATE EXTENSION  pg_stat_statements SCHEMA public
ALTER INDEX test_alter_index_idx4 DEPENDS ON EXTENSION pg_stat_statements;
NOTICE:  deparsed json: {"no": "", "fmt": "ALTER INDEX %{identity}D %{no}s DEPENDS ON EXTENSION %{newname}I", "newname": "pg_stat_statements", "identity": {"objname": "test_alter_index_idx4", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx4  DEPENDS ON EXTENSION pg_stat_statements
ALTER INDEX test_alter_index_idx4 NO DEPENDS ON EXTENSION pg_stat_statements;
NOTICE:  deparsed json: {"no": "NO", "fmt": "ALTER INDEX %{identity}D %{no}s DEPENDS ON EXTENSION %{newname}I", "newname": "pg_stat_statements", "identity": {"objname": "test_alter_index_idx4", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx4 NO DEPENDS ON EXTENSION pg_stat_statements
DROP EXTENSION pg_stat_statements;
-- ALTER INDEX [ IF EXISTS ] name SET ( storage_parameter [= value] [, ... ] )
ALTER INDEX test_alter_index_idx5 SET (fillfactor = 30);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "fillfactor"}, "value": "30"}], "set_reset": "SET"}], "identity": {"objname": "test_alter_index_idx5", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx5 SET (fillfactor = '30')
ALTER INDEX test_alter_index_idx6 SET (fillfactor = 30, deduplicate_items=OFF);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "fillfactor"}, "value": "30"}, {"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "deduplicate_items"}, "value": "off"}], "set_reset": "SET"}], "identity": {"objname": "test_alter_index_idx6", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx6 SET (fillfactor = '30', deduplicate_items = 'off')
ALTER INDEX IF EXISTS test_alter_index_fake_index SET (fillfactor = 30, deduplicate_items=OFF);
NOTICE:  relation "test_alter_index_fake_index" does not exist, skipping
-- ALTER INDEX [ IF EXISTS ] name RESET ( storage_parameter [, ... ] )
ALTER INDEX test_alter_index_idx7 SET (fillfactor = 30);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "fillfactor"}, "value": "30"}], "set_reset": "SET"}], "identity": {"objname": "test_alter_index_idx7", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx7 SET (fillfactor = '30')
ALTER INDEX test_alter_index_idx7 RESET (fillfactor);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s", "label": {"fmt": "%{label}I", "label": "fillfactor"}}], "set_reset": "RESET"}], "identity": {"objname": "test_alter_index_idx7", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx7 RESET (fillfactor)
ALTER INDEX test_alter_index_idx8 SET (fillfactor = 30, deduplicate_items=OFF);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "fillfactor"}, "value": "30"}, {"fmt": "%{label}s = %{value}L", "label": {"fmt": "%{label}I", "label": "deduplicate_items"}, "value": "off"}], "set_reset": "SET"}], "identity": {"objname": "test_alter_index_idx8", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx8 SET (fillfactor = '30', deduplicate_items = 'off')
ALTER INDEX test_alter_index_idx8 RESET (fillfactor, deduplicate_items);
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "%{set_reset}s (%{options:, }s)", "options": [{"fmt": "%{label}s", "label": {"fmt": "%{label}I", "label": "fillfactor"}}, {"fmt": "%{label}s", "label": {"fmt": "%{label}I", "label": "deduplicate_items"}}], "set_reset": "RESET"}], "identity": {"objname": "test_alter_index_idx8", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx8 RESET (fillfactor, deduplicate_items)
ALTER INDEX IF EXISTS test_alter_index_fake_index RESET (fillfactor, deduplicate_items);
NOTICE:  relation "test_alter_index_fake_index" does not exist, skipping
-- ALTER INDEX [ IF EXISTS ] name ALTER [ COLUMN ] column_number
--     SET STATISTICS integer
CREATE INDEX test_alter_index_idx9 ON test_alter_index ((id1 + id2), (id1 * id2));
NOTICE:  deparsed json: {"fmt": "CREATE %{unique}s INDEX %{concurrently}s %{if_not_exists}s %{name}I ON %{only}s %{table}D USING %{index_am}s %{definition}s %{with}s %{tablespace}s %{where_clause}s NULLS DISTINCT", "name": "test_alter_index_idx9", "only": "", "with": {"fmt": "WITH", "present": false}, "table": {"objname": "test_alter_index", "schemaname": "public"}, "unique": "", "index_am": "btree", "definition": "(((id1 OPERATOR(pg_catalog.+) id2)) pg_catalog.int4_ops, ((id1 OPERATOR(pg_catalog.*) id2)) pg_catalog.int4_ops)", "tablespace": {"fmt": "TABLESPACE", "present": false}, "concurrently": "", "where_clause": {"fmt": "WHERE", "present": false}, "if_not_exists": ""}
NOTICE:  re-formed command: CREATE  INDEX   test_alter_index_idx9 ON  public.test_alter_index USING btree (((id1 OPERATOR(pg_catalog.+) id2)) pg_catalog.int4_ops, ((id1 OPERATOR(pg_catalog.*) id2)) pg_catalog.int4_ops)    NULLS DISTINCT
ALTER INDEX test_alter_index_idx9 ALTER 1 SET STATISTICS 9999;
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "ALTER COLUMN %{column}n SET STATISTICS %{statistics}n", "type": "set statistics", "column": 1, "statistics": 9999}], "identity": {"objname": "test_alter_index_idx9", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx9 ALTER COLUMN 1 SET STATISTICS 9999
ALTER INDEX test_alter_index_idx9 ALTER COLUMN 2 SET STATISTICS 9999;
NOTICE:  deparsed json: {"fmt": "ALTER %{objtype}s %{identity}D %{subcmds:, }s", "objtype": "INDEX", "subcmds": [{"fmt": "ALTER COLUMN %{column}n SET STATISTICS %{statistics}n", "type": "set statistics", "column": 2, "statistics": 9999}], "identity": {"objname": "test_alter_index_idx9", "schemaname": "public"}}
NOTICE:  re-formed command: ALTER INDEX public.test_alter_index_idx9 ALTER COLUMN 2 SET STATISTICS 9999
ALTER INDEX IF EXISTS test_alter_index_fake_index ALTER COLUMN 2 SET STATISTICS 9999;
NOTICE:  relation "test_alter_index_fake_index" does not exist, skipping
-- ALTER INDEX ALL IN TABLESPACE name [ OWNED BY role_name [, ... ] ]
--     SET TABLESPACE new_tablespace [ NOWAIT ]
-- TOFIX
-- CREATE INDEX test_alter_index_idx10 ON test_alter_index ((id2 + id3))
--     TABLESPACE ddl_testing_tablespace_backup;
-- ALTER INDEX ALL IN TABLESPACE ddl_testing_tablespace_backup SET TABLESPACE ddl_testing_tablespace;
-- CREATE INDEX test_alter_index_idx11 ON test_alter_index ((id3 + id4))
--     TABLESPACE ddl_testing_tablespace_backup;
-- ALTER INDEX ALL IN TABLESPACE ddl_testing_tablespace_backup SET TABLESPACE ddl_testing_tablespace NOWAIT;
-- TODO: OWNED BY
